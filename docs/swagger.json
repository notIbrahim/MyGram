{
    "swagger": "2.0",
    "info": {
        "description": "Documentation MyGram using Gin Framework\ninorder to use this api there bearer token which some of function are needed\nFirst you need regis and login\nThen Click \"Authorize\" at right and there pop-up will be appear and input your token and it will reveal true token e.g \"Bearer e4udqw923.....\"\nFinally you can use some of function that already state before",
        "title": "API Documentation\tMyGram",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "togi.mare@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "host": "localhost:8087",
    "basePath": "/",
    "paths": {
        "/socials/": {
            "get": {
                "description": "MyGram Social Media function for check all user status who been registered without login known as incognito\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SocialQueries"
                ],
                "summary": "MyGram Function Social Media",
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/socials/{ID}": {
            "get": {
                "description": "MyGram Social Media function for check one status of a user without login known as incognito\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SocialQueries"
                ],
                "summary": "MyGram Function Social Media",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Social Media ID it means what iterations are you looking for",
                        "name": "ID",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "User Login for user who are registered",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserQueries"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Your Email are needed in order to login",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Your password are needed in order to login",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Well Obviously it User Registration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserQueries"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Your Email address registered",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Your password registered",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}